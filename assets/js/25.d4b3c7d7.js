(window.webpackJsonp=window.webpackJsonp||[]).push([[25],{427:function(o,e,p){"use strict";p.r(e);var l=p(2),t=Object(l.a)({},(function(){var o=this,e=o._self._c;return e("ContentSlotsDistributor",{attrs:{"slot-key":o.$parent.slotKey}},[e("h2",{attrs:{id:"springboot在logback-xml中读取application-properties中配置的日志路径"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#springboot在logback-xml中读取application-properties中配置的日志路径"}},[o._v("#")]),o._v(" SPRINGBOOT在LOGBACK.XML中读取APPLICATION.PROPERTIES中配置的日志路径")]),o._v(" "),e("p",[o._v("1、在springboot项目中使用logback记录日志，在"),e("code",[o._v("logback.xml")]),o._v("中配置日志存储位置时读取"),e("code",[o._v("application.properties")]),o._v("中配置的路径，在 logback.xml中配置引用如下："),e("code",[o._v('<property name="log.path" value="${logback.loghome}"/>')]),o._v("，发现读取不到")]),o._v(" "),e("p",[o._v("2、原因：因为"),e("code",[o._v("logback.xml")]),o._v("的加载顺序早于springboot的"),e("code",[o._v("application.yml")]),o._v(" (或"),e("code",[o._v("application.properties")]),o._v(") 配置文件当然读不到"),e("code",[o._v("application.yml")]),o._v("（或"),e("code",[o._v("application.properties")]),o._v("）文件中的值了")]),o._v(" "),e("p",[o._v("3、解决方案：")]),o._v(" "),e("ul",[e("li",[o._v("需要通过springProperty标签来引用："),e("code",[o._v('<springProperty scope="context" name="log.path" source="logback.loghome"/>')]),o._v("，这里的name和上面property标签一样不多说，source其实就是上面的value啦，只不过要注意：千万不要加${}")]),o._v(" "),e("li",[o._v("在"),e("code",[o._v("application.yml")]),o._v(" (或"),e("code",[o._v("application.properties")]),o._v(")文件中添加属性"),e("code",[o._v("logback.loghome")])]),o._v(" "),e("li",[o._v("把"),e("code",[o._v("logback.xml")]),o._v("配置文件名，改为："),e("code",[o._v("logback-spring.xml")]),o._v("。")])])])}),[],!1,null,null,null);e.default=t.exports}}]);