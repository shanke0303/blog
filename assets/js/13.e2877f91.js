(window.webpackJsonp=window.webpackJsonp||[]).push([[13],{415:function(s,a,e){"use strict";e.r(a);var n=e(2),t=Object(n.a)({},(function(){var s=this,a=s._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"title"},[s._v("说明")]),a("p",[s._v("FreeRTOS学习文档，记录相关api")])]),s._v(" "),a("h2",{attrs:{id:"_1-mutex"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-mutex"}},[s._v("#")]),s._v(" 1. MUTEX")]),s._v(" "),a("h3",{attrs:{id:"_1-1-mutex作用"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-1-mutex作用"}},[s._v("#")]),s._v(" 1.1 MUTEX作用")]),s._v(" "),a("p",[s._v("常用于多任务共享变量")]),s._v(" "),a("h3",{attrs:{id:"_1-2-api"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-2-api"}},[s._v("#")]),s._v(" 1.2 API")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("SemaphoreHandle_t xMutexMPU6050 = NULL; // 创建信号量Handler\n\n\nxMutexMPU6050 = xSemaphoreCreateMutex(); // 创建MUTEX\n\nif (xSemaphoreTake(xMutexMPU6050, timeOut) == pdPASS) { // 获取钥匙\n    // do something\n    // ...\n    xSemaphoreGive(xMutexMPU6050); // 释放钥匙\n} else {\n    // Unable to obtain MUTEX\n}\n\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br")])]),a("h2",{attrs:{id:"_2-esp32-双核"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-esp32-双核"}},[s._v("#")]),s._v(" 2. ESP32 双核")]),s._v(" "),a("h3",{attrs:{id:"_2-1-api"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-1-api"}},[s._v("#")]),s._v(" 2.1 API")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("// 1.创建任务\n// a.\nxTaskCreate(); // 由系统选择运行核心，优先选择0\n// b.\nxTaskCreatePinnedToCore(); // 指派任务给指定核心\n\n// 2.获取当前任务运行的核心\nxPortGetCoreID();\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br")])]),a("h2",{attrs:{id:"_3-绝对任务延迟"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-绝对任务延迟"}},[s._v("#")]),s._v(" 3. 绝对任务延迟")]),s._v(" "),a("h3",{attrs:{id:"_3-1-api"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-1-api"}},[s._v("#")]),s._v(" 3.1 API")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("// 最后一次的唤醒时间是指针类型。\n// 本函数会自动更新xLastWakeTime为最后一次唤醒的时间\n// 所以无需手动在while循环内对其手动赋值\nvTaskDelayUntil(&xLastWakeTime, xFrequency); // xFrequency: delay ticks\n\n// Tick Coun 和 Arduino Millis一样\n// uint32_t类型 49天后overflow     \nxTaskGetTickCount();\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br")])]),a("h2",{attrs:{id:"_4-software-timer"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-software-timer"}},[s._v("#")]),s._v(" 4. Software Timer")]),s._v(" "),a("h3",{attrs:{id:"_4-1-api"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-1-api"}},[s._v("#")]),s._v(" 4.1 API")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v('TimerHandle_t checkHandle; // timer句柄\n\n// 创建\ncheckHandle = xTimerCreate("Sensors Check",\n                             100, // ticks\n                             pdTRUE, // 是否循环\n                             (void *)1, // timer id\n                             checkCallback); // function to call \n// 开始\n// 必须要在 portMAX_DELAY 内开启 timer start\n// portMAX_DELAY is listed as value for waiting indefinitely\n// 实际上0xFFFFFFFF 2^32-1  49天 7周\n// 在此期间，此task进入Block状态\nxTimerStart(checkHandle, portMAX_DELAY);\n')])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br")])]),a("h2",{attrs:{id:"_5-任务内存设置优化"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_5-任务内存设置优化"}},[s._v("#")]),s._v(" 5. 任务内存设置优化")]),s._v(" "),a("h3",{attrs:{id:"_5-1-api"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_5-1-api"}},[s._v("#")]),s._v(" 5.1 API")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("ESP.getHeapSize(); //本程序Heap最大尺寸\nESP.getFreeHeap(); //当前Free Heap最大尺寸\nuxTaskGetStackHighWaterMark(taskHandle); //Task内存使用最大水位线，内存是水\n/*    \nWhat is the Highest Water Mark?\nthe minimum amount of remaining stack space that was available to the task \nsince the task started executing - that is the amount of stack that remained \nunused when the task stack was at its greatest (deepest) value. This is what \nis referred to as the stack 'high water mark'.\n*/\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br")])]),a("h2",{attrs:{id:"_6-任务管理"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_6-任务管理"}},[s._v("#")]),s._v(" 6. 任务管理")]),s._v(" "),a("h3",{attrs:{id:"_6-1-api"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_6-1-api"}},[s._v("#")]),s._v(" 6.1 API")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("BaseType_t xTaskCreate(,,,,,); //任务创建\nvoid vTaskDelete( TaskHandle_t xTask ); //任务删除 \nvoid vTaskSuspend( TaskHandle_t xTaskToSuspend ); //任务暂停\nvoid vTaskResume( TaskHandle_t xTaskToResume ); //任务恢复\n\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br")])]),a("h2",{attrs:{id:"_7-任务优先级"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_7-任务优先级"}},[s._v("#")]),s._v(" 7. 任务优先级")]),s._v(" "),a("h3",{attrs:{id:"_7-1-说明"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_7-1-说明"}},[s._v("#")]),s._v(" 7.1 说明")]),s._v(" "),a("p",[s._v("说明：高优先级的任务就像是救护车，低优先级的任务就是普通车辆\n如同公路上所有普通车辆需要让救护车一样\n高优先级任务永远会比低优先级任务优先执行")]),s._v(" "),a("p",[s._v("问题：高优先级任务不进入Block或者Suspend状态\n低优先级任务就永远不会被执行\n这就是著名的任务 《吃撑和饿死》 的问题")]),s._v(" "),a("h3",{attrs:{id:"_7-2-api"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_7-2-api"}},[s._v("#")]),s._v(" 7.2 API")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("// 设置优先级\nvoid vTaskPrioritySet( TaskHandle_t xTask,\n                    UBaseType_t uxNewPriority );\n\n// 获取TashHandle任务优先级\nUBaseType_t uxTaskPriorityGet( TaskHandle_t xTask );\n\n// 获取当前任务优先级\nUBaseType_t uxTaskPriorityGet(NULL);\n\n// 退让资源，任务调度器会重新评估任务，将资源分配给同等级或者更高等级任务\n// 注意不会把资源给低等级任务\ntastYIELD() yield()\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br")])]),a("h2",{attrs:{id:"_8-看门狗"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_8-看门狗"}},[s._v("#")]),s._v(" 8. 看门狗")]),s._v(" "),a("h3",{attrs:{id:"_8-1-说明"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_8-1-说明"}},[s._v("#")]),s._v(" 8.1 说明")]),s._v(" "),a("p",[s._v("说明：看门狗是针对Task任务的\nArduion-ESP32 默认在 Core 0 的 IDLE 任务开启了看门狗 时间为 5000 ticks = 5秒\nCore 0 和 Core 1 都运行了 FreeRTOS的IDLE任务，优先级为 0\nIDLE任务是用于清理被删除任务的内存\nCore 1 loopBack任务就是Arduino的 setup 和 loop 优先级为 1")]),s._v(" "),a("h3",{attrs:{id:"_8-2-api"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_8-2-api"}},[s._v("#")]),s._v(" 8.2 API")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("// 1.手动关闭CPU上的TWDT - 慎重操作\ndisableCore0WDT();\ndisableCore1WDT();\n\n// 2.\n// 给本任务添加看门狗（NULL代表本任务）\n// 这个命令需要放在xTaskCreate的前面，否则连运行的机会都没有\nesp_task_wdt_add(NULL);\n//vTaskDelay(1); //让Task进入Block状态，退让资源\n//vTaskSuspend(NULL); //让Task进入Suspend状态，退让资源\n\n// 移除本任务的看门狗（NULL代表本任务）\nesp_task_wdt_delete(NULL)\n\n// 3.\n// 给自己任务的狗喂时间\nesp_task_wdt_reset()\n\n// 通过寄存器给所有任务的狗喂时\nvoid feedTheDogInAllTasks() { \n  // feed dog 0\n  TIMERG0.wdt_wprotect = TIMG_WDT_WKEY_VALUE; // write enable\n  TIMERG0.wdt_feed = 1;                     // feed dog\n  TIMERG0.wdt_wprotect = 0;                 // write protect\n  // feed dog 1\n  TIMERG1.wdt_wprotect = TIMG_WDT_WKEY_VALUE; // write enable\n  TIMERG1.wdt_feed = 1;                     // feed dog\n  TIMERG1.wdt_wprotect = 0;                 // write protect\n}\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br"),a("span",{staticClass:"line-number"},[s._v("19")]),a("br"),a("span",{staticClass:"line-number"},[s._v("20")]),a("br"),a("span",{staticClass:"line-number"},[s._v("21")]),a("br"),a("span",{staticClass:"line-number"},[s._v("22")]),a("br"),a("span",{staticClass:"line-number"},[s._v("23")]),a("br"),a("span",{staticClass:"line-number"},[s._v("24")]),a("br"),a("span",{staticClass:"line-number"},[s._v("25")]),a("br"),a("span",{staticClass:"line-number"},[s._v("26")]),a("br"),a("span",{staticClass:"line-number"},[s._v("27")]),a("br"),a("span",{staticClass:"line-number"},[s._v("28")]),a("br"),a("span",{staticClass:"line-number"},[s._v("29")]),a("br")])]),a("h2",{attrs:{id:"_9-消息队列"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_9-消息队列"}},[s._v("#")]),s._v(" 9. 消息队列")]),s._v(" "),a("h3",{attrs:{id:"_9-1-说明"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_9-1-说明"}},[s._v("#")]),s._v(" 9.1 说明")]),s._v(" "),a("p",[s._v("可以结合结构体巧妙的通过当个队列传输多个设备多种数据类型\n在接收方，我们通过deviceID来判断数据来源和value的意义")]),s._v(" "),a("h3",{attrs:{id:"_9-2-api"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_9-2-api"}},[s._v("#")]),s._v(" 9.2 API")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("QueueHandle_t xQueueCreate( UBaseType_t uxQueueLength, // 元素个数\n                             UBaseType_t uxItemSize ); // 每个元素占用内存大小 sizeof()\n\nBaseType_t xQueueSend(\n                        QueueHandle_t xQueue, // 队列句柄\n                        const void * pvItemToQueue, // 元素指针 &message\n                        TickType_t xTicksToWait // timeOut ticks\n                        );\nBaseType_t xQueueReceive(\n                            QueueHandle_t xQueue,\n                            void *pvBuffer, // 存放的变量指针\n                            TickType_t xTicksToWait\n                        );\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br")])]),a("h2",{attrs:{id:"_10-信号量-semaphore"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_10-信号量-semaphore"}},[s._v("#")]),s._v(" 10. 信号量 Semaphore")]),s._v(" "),a("h3",{attrs:{id:"_10-1-二进制信号量-binary-semaphore"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_10-1-二进制信号量-binary-semaphore"}},[s._v("#")]),s._v(" 10.1 二进制信号量 Binary Semaphore")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("SemaphoreHandle_t xHandler; 创建Handler\nxHandler = xSemaphoreCreateBinary(); // 创建一个二进制信号量 返回NULL，或者handler\nxSemaphoreGive(xHandler); // 生产者+1\nxSemaphoreTake(xHanlder, timeout); // 消费者-1 返回pdPASS, 或者pdFAIL\n\n// 二进制信号量可以想成就是一个整数 0 或者 1\n// Give就是+1\n// Take就是-1\n\n// Take的时候如果这个整数是0的话，就等待一直到timeout\n\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br")])]),a("h3",{attrs:{id:"_10-2-计数信号量-counting-semaphore"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_10-2-计数信号量-counting-semaphore"}},[s._v("#")]),s._v(" 10.2 计数信号量 Counting Semaphore")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("SemaphoreHandle_t xSemaPhone = NULL;\n\nSemaPhone = xSemaphoreCreateCounting(3, 0); // (max, min)\n\nif (xSemaphoreTake(xSemaPhone, portMAX_DELAY) == pdTRUE ) { // -1\n    // do something\n}\n\nxSemaphoreGive(xSemaPhone); // +1\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br")])]),a("h2",{attrs:{id:"_11-事件标志组-event-group"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_11-事件标志组-event-group"}},[s._v("#")]),s._v(" 11. 事件标志组 Event Group")]),s._v(" "),a("h3",{attrs:{id:"_11-1-等待-同步"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_11-1-等待-同步"}},[s._v("#")]),s._v(" 11.1  等待 同步")]),s._v(" "),a("h3",{attrs:{id:"_11-2-api"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_11-2-api"}},[s._v("#")]),s._v(" 11.2 API")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("EventGroupHandle_t xEventPurchase = NULL; //创建event handler\nxEventPurchase = xEventGroupCreate(); // 创建 event group\n\nEventBits_t uxBits;  // Event Group 24Bits 的 值\n\nuxBits = xEventGroupSetBits(xEventPurchase, ADDTOCART_0); // 0b0001 将bit 0 设置为1\n\nuxBits = xEventGroupWaitBits (\n    xEventPurchase,  //Event Group Handler\n    ADDTOCART_0 | PAYMENT_1 | INVENTORY_2, // 0b0001|0b0010|0b0100 等待Event Group中的那个Bit(s)\n    pdFALSE,         //执行后，对应的Bits是否重置为 0\n    pdTRUE,          //等待的Bits判断关系 True为 AND, False为 OR\n    xTimeOut);\n\nuxBits = xEventGroupSync (xEventPurchase,  //Event Group Handler\n    ADDTOCART_0,     // 0b0001 先将这个bit(s)设置为 1,然后再等待\n    BOUGHT_PAID_SENT,  // 0b0001|0b0010|0b0100 等待这些bits为 1\n    xTimeOut);    \n\nuxBits = xEventGroupGetBits(xEventPurchase); //读取    \n\nxEventGroupClearBits(xEventPurchase, ALLBITS); //重置\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br"),a("span",{staticClass:"line-number"},[s._v("19")]),a("br"),a("span",{staticClass:"line-number"},[s._v("20")]),a("br"),a("span",{staticClass:"line-number"},[s._v("21")]),a("br"),a("span",{staticClass:"line-number"},[s._v("22")]),a("br")])]),a("h2",{attrs:{id:"_12-流式缓存-stream-buffer"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_12-流式缓存-stream-buffer"}},[s._v("#")]),s._v(" 12. 流式缓存 Stream Buffer")]),s._v(" "),a("h3",{attrs:{id:"_12-1-说明"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_12-1-说明"}},[s._v("#")]),s._v(" 12.1  说明")]),s._v(" "),a("p",[s._v("FreeRTOS 10以后引入了一个新的数据类型就是 Stream Buffer。它和Queue最大的不同就是，Stream Buffer读写的大小没有限制，而Queue是预设值好固定的值。主要应用比如MP3，视频，在线电台等。")]),s._v(" "),a("p",[s._v("程序：  使用Stream Buffer 对流媒体数据，在任务间进行传输\n流媒体，读和写的大小都没有任何的限制\n读和写的大小可以不一致， 比如写入100 bytes, 可以分成两次每次50 bytes读取出来")]),s._v(" "),a("p",[s._v("注意：  适合于一个任务写，另外一个任务读\n不适合多任务读写\n如果必须要用在多任务的读写，请将内容放入CRITICAL SECTION\n可以使用 MUTEX 或者 TASK Notification")]),s._v(" "),a("h3",{attrs:{id:"_12-2-api"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_12-2-api"}},[s._v("#")]),s._v(" 12.2 API")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v('//不要忘记include stream_buffer.h\n#include <freertos/stream_buffer.h>\n\nStreamBufferHandle_t xStreamMusic = NULL; //创建一个 Stream Buffer 的 handler\n\n// 创建Stream Buffer\n// Stream Buffer的最大尺寸，如果超出可能内存空间，那么创建Stream Buffer就会失败\nconst size_t xStreamBufferSizeBytes = 540;\n// Trigger Level - Stream Buffer内数据超过这个数值，才会被读取\nconst size_t xTriggerLevel = 8;\nxStreamMusic = xStreamBufferCreate(xStreamBufferSizeBytes, xTriggerLevel);\n\nif ( xStreamMusic == NULL )\n{ //内存不过，无法创建Stream Buffer\n    Serial.println("UNABLE TO CREATE STREAM BUFFER");\n}\n\n// 发送 buffer满了后该方法会阻塞等待发送\nsize_t xBytesSent; //The number of bytes written to the stream buffer.\nxBytesSent = xStreamBufferSend( \n    xStreamMusic,\n    (void *)&music, // 发送的数据\n    sizeof(music), // 发送大小\n    portMAX_DELAY); // timeout\n\nif ( xBytesSent != sizeof( music ) ) {\n    Serial.println("警告: xStreamBufferSend 写入数据出错");  //Optional\n}\n\n// 接收 没有数据或者小于xTriggerLevel会阻塞\nsize_t xReceivedBytes; //The number of bytes read from the stream buffer.\nsize_t xReadBytes = 8*10-1;\nxReceivedBytes = xStreamBufferReceive( \n    xStreamMusic,\n    ( void * ) &music, // 存放的变量指针\n    xReadBytes, // 读取大小\n    portMAX_DELAY );\nif ( xReceivedBytes > 0 )\n{\n    // do something\n}\n\n// 查看使用情况 可创建task实现监控\nsize_t xAvailable, xUsed;\nbool isFull;\n//Queries a stream buffer to see if it is full.\nif (xStreamBufferIsFull(xStreamMusic) == pdTRUE) Serial.println("xStreamMusic 已满");\n\n//Queries a stream buffer to see how much data it contains\nxUsed =  xStreamBufferBytesAvailable(xStreamMusic);\n\n//Queries a stream buffer to see how much free space it contains\nxAvailable = xStreamBufferSpacesAvailable(xStreamMusic);\n\nchar msg[40];\nsprintf(msg, "xStreamBuffer已使用 %d 字节", xUsed);\nSerial.println(msg);\nsprintf(msg, "xStreamBuffer可用空间为 %d 字节", xAvailable);\nSerial.println(msg);\n\n')])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br"),a("span",{staticClass:"line-number"},[s._v("19")]),a("br"),a("span",{staticClass:"line-number"},[s._v("20")]),a("br"),a("span",{staticClass:"line-number"},[s._v("21")]),a("br"),a("span",{staticClass:"line-number"},[s._v("22")]),a("br"),a("span",{staticClass:"line-number"},[s._v("23")]),a("br"),a("span",{staticClass:"line-number"},[s._v("24")]),a("br"),a("span",{staticClass:"line-number"},[s._v("25")]),a("br"),a("span",{staticClass:"line-number"},[s._v("26")]),a("br"),a("span",{staticClass:"line-number"},[s._v("27")]),a("br"),a("span",{staticClass:"line-number"},[s._v("28")]),a("br"),a("span",{staticClass:"line-number"},[s._v("29")]),a("br"),a("span",{staticClass:"line-number"},[s._v("30")]),a("br"),a("span",{staticClass:"line-number"},[s._v("31")]),a("br"),a("span",{staticClass:"line-number"},[s._v("32")]),a("br"),a("span",{staticClass:"line-number"},[s._v("33")]),a("br"),a("span",{staticClass:"line-number"},[s._v("34")]),a("br"),a("span",{staticClass:"line-number"},[s._v("35")]),a("br"),a("span",{staticClass:"line-number"},[s._v("36")]),a("br"),a("span",{staticClass:"line-number"},[s._v("37")]),a("br"),a("span",{staticClass:"line-number"},[s._v("38")]),a("br"),a("span",{staticClass:"line-number"},[s._v("39")]),a("br"),a("span",{staticClass:"line-number"},[s._v("40")]),a("br"),a("span",{staticClass:"line-number"},[s._v("41")]),a("br"),a("span",{staticClass:"line-number"},[s._v("42")]),a("br"),a("span",{staticClass:"line-number"},[s._v("43")]),a("br"),a("span",{staticClass:"line-number"},[s._v("44")]),a("br"),a("span",{staticClass:"line-number"},[s._v("45")]),a("br"),a("span",{staticClass:"line-number"},[s._v("46")]),a("br"),a("span",{staticClass:"line-number"},[s._v("47")]),a("br"),a("span",{staticClass:"line-number"},[s._v("48")]),a("br"),a("span",{staticClass:"line-number"},[s._v("49")]),a("br"),a("span",{staticClass:"line-number"},[s._v("50")]),a("br"),a("span",{staticClass:"line-number"},[s._v("51")]),a("br"),a("span",{staticClass:"line-number"},[s._v("52")]),a("br"),a("span",{staticClass:"line-number"},[s._v("53")]),a("br"),a("span",{staticClass:"line-number"},[s._v("54")]),a("br"),a("span",{staticClass:"line-number"},[s._v("55")]),a("br"),a("span",{staticClass:"line-number"},[s._v("56")]),a("br"),a("span",{staticClass:"line-number"},[s._v("57")]),a("br"),a("span",{staticClass:"line-number"},[s._v("58")]),a("br"),a("span",{staticClass:"line-number"},[s._v("59")]),a("br"),a("span",{staticClass:"line-number"},[s._v("60")]),a("br")])]),a("h2",{attrs:{id:"_13-消息缓存-message-buffer"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_13-消息缓存-message-buffer"}},[s._v("#")]),s._v(" 13. 消息缓存 Message Buffer")]),s._v(" "),a("h3",{attrs:{id:"_13-1-说明"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_13-1-说明"}},[s._v("#")]),s._v(" 13.1  说明")]),s._v(" "),a("p",[s._v("Message Buffer是基于Stream Buffer的。只是在每一次发送数据的时候多了四个字节的空间用于存放消息的大小。更具这个消息大小，读取放就可以一次读取出全部消息的内容。")]),s._v(" "),a("p",[s._v("很适合 串口 接收和发送数据，每次的大小不定，但是接受和发送的数据量需要相同")]),s._v(" "),a("h3",{attrs:{id:"_13-2-api"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_13-2-api"}},[s._v("#")]),s._v(" 13.2 API")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v('//不要忘记include message_buffer.h\n#include <freertos/message_buffer.h>\n\nMessageBufferHandle_t xMessageBuffer = NULL;\n\n// 创建\nconst size_t xMessageBufferSizeBytes = 100;\nxMessageBuffer = xMessageBufferCreate( xMessageBufferSizeBytes );\n\nif ( xMessageBuffer == NULL )\n{\n    Serial.println("Unable to Create Message Buffer");\n}\n\n// 发送\nxMessageBufferSend( \n    xMessageBuffer,\n    ( void * ) &gpsInfo,\n    sizeof( gpsInfo ),\n    portMAX_DELAY );\n\n// 接收\nxReceivedBytes = xMessageBufferReceive( \n    xMessageBuffer,\n    ( void * ) &gpsInfo,\n    xMessageSizeMax, // This sets the maximum length of the message that can be received.\n    portMAX_DELAY );\n\n// 查看使用情况\nsize_t xAvailable, xUsed;\nbool isFull;\n//Queries a stream buffer to see if it is full.\nif (xMessageBufferIsFull(xMessageBuffer) == pdTRUE) Serial.println("xMessageBuffer 已满");\n\n//Queries a stream buffer to see how much free space it contains\nxAvailable = xMessageBufferSpacesAvailable(xMessageBuffer);\n\nchar msg[40];\nsprintf(msg, "xMessageBuffer可用空间为 %d 字节", xAvailable);\nSerial.println(msg);\n\n\n')])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br"),a("span",{staticClass:"line-number"},[s._v("19")]),a("br"),a("span",{staticClass:"line-number"},[s._v("20")]),a("br"),a("span",{staticClass:"line-number"},[s._v("21")]),a("br"),a("span",{staticClass:"line-number"},[s._v("22")]),a("br"),a("span",{staticClass:"line-number"},[s._v("23")]),a("br"),a("span",{staticClass:"line-number"},[s._v("24")]),a("br"),a("span",{staticClass:"line-number"},[s._v("25")]),a("br"),a("span",{staticClass:"line-number"},[s._v("26")]),a("br"),a("span",{staticClass:"line-number"},[s._v("27")]),a("br"),a("span",{staticClass:"line-number"},[s._v("28")]),a("br"),a("span",{staticClass:"line-number"},[s._v("29")]),a("br"),a("span",{staticClass:"line-number"},[s._v("30")]),a("br"),a("span",{staticClass:"line-number"},[s._v("31")]),a("br"),a("span",{staticClass:"line-number"},[s._v("32")]),a("br"),a("span",{staticClass:"line-number"},[s._v("33")]),a("br"),a("span",{staticClass:"line-number"},[s._v("34")]),a("br"),a("span",{staticClass:"line-number"},[s._v("35")]),a("br"),a("span",{staticClass:"line-number"},[s._v("36")]),a("br"),a("span",{staticClass:"line-number"},[s._v("37")]),a("br"),a("span",{staticClass:"line-number"},[s._v("38")]),a("br"),a("span",{staticClass:"line-number"},[s._v("39")]),a("br"),a("span",{staticClass:"line-number"},[s._v("40")]),a("br"),a("span",{staticClass:"line-number"},[s._v("41")]),a("br"),a("span",{staticClass:"line-number"},[s._v("42")]),a("br")])]),a("h2",{attrs:{id:"_11-直接任务通知-direct-task-notification"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_11-直接任务通知-direct-task-notification"}},[s._v("#")]),s._v(" 11. 直接任务通知 Direct Task Notification")]),s._v(" "),a("h3",{attrs:{id:"_11-1-说明"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_11-1-说明"}},[s._v("#")]),s._v(" 11.1  说明")]),s._v(" "),a("p",[s._v("Direct Task Notification是FreeRTOS 10版本以后的最重要的一个功能。他可以实现大部分二进制信号量，计数信号量，事件组，邮箱等等的功能。而且速度快45%，已经占用更少的内存。")]),s._v(" "),a("p",[a("em",[s._v("要点")]),s._v("：")]),s._v(" "),a("ul",[a("li",[s._v("一个任务可以有多个notification")]),s._v(" "),a("li",[s._v("每个notification包含4个字节的value 和 1个字节的stats")]),s._v(" "),a("li",[s._v("stats用来记录当前的notification有没有被处理 pending or not pending")]),s._v(" "),a("li",[s._v("我们不能对stats进行直接的读写操作，是系统自动的")]),s._v(" "),a("li",[s._v("我们只能对notification value 进行操作")])]),s._v(" "),a("h3",{attrs:{id:"_11-2-api-对notification的读-写-和-等待。"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_11-2-api-对notification的读-写-和-等待。"}},[s._v("#")]),s._v(" 11.2 API 对notification的读，写 和 等待。")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v('\nstatic TaskHandle_t xTaskWait = NULL;\nstatic TaskHandle_t xTaskGive = NULL;\n\n#define LOWTHREEBITS ( 1UL << 0UL )|( 1UL << 1UL )|( 1UL << 2UL )\n\nvoid taskWait(void *pvParam) {\n  uint32_t ulNotificationValue; //用来存放本任务的4个字节的notification value\n  BaseType_t xResult;\n\n  while (1) {\n    //vTaskDelay(1000);\n    xResult = xTaskNotifyWait(\n        0x00, //在运行前这个命令之前，先清除这几位\n        0x00, //运行后，重置所有的bits 0x00 or ULONG_MAX or 0xFFFFFFFF\n        &ulNotificationValue, //重置前的notification value\n        portMAX_DELAY ); //一直等待\n                      \n    if (xResult == pdTRUE) {\n      Serial.println(ulNotificationValue); //将自己的notification value以二进制方式打出来\n    } else {\n      Serial.println("Timeout");\n    }\n  }\n}\n\nvoid taskGive(void *pvParam) {\n  pinMode(23, INPUT_PULLUP);\n  BaseType_t xResult;\n  while (1) {\n    if (digitalRead(23) == LOW) {\n      xResult=xTaskNotify( xTaskWait, 0, eIncrement );  //对方的notification value +1\n      //xResult=xTaskNotify( xTaskWait, 0, eNoAction ); //不设置对方的notification value\n      //xResult=xTaskNotify( xTaskWait, ( 1UL << 4UL ), eSetBits ); //第3个bits 设置为 1 和 原有的值是OR运算\n      //xResult=xTaskNotify( xTaskWait, 0, eIncrement );  //对方的notification value +1\n      //xResult=xTaskNotify( xTaskWait, LOWTHREEBITS, eSetValueWithOverwrite ); //覆盖原有的值\n      //xResult=xTaskNotify( xTaskWait, 0b11111111, eSetValueWithOverwrite ); //覆盖原有的值\n      //xResult=xTaskNotify( xTaskWait, 0xFF, eSetValueWithOverwrite ); //覆盖原有的值\n      //xResult=xTaskNotify( xTaskWait, LOWTHREEBITS, eSetValueWithoutOverwrite); //如果没有待处理的就覆盖，如果有待处理的就pending\n      Serial.println(xResult == pdPASS ? "成功\\n":"失败\\n");\n      \n      vTaskDelay(120); //消除按钮抖动\n    }\n  }\n}\nvoid setup() {\n  Serial.begin(115200);\n\n  xTaskCreate(taskGive, "", 1024 * 4, NULL, 1, &xTaskGive);\n  xTaskCreate(taskWait, "", 1024 * 4, NULL, 1, &xTaskWait);\n}\n\nvoid loop() { }\n\n')])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br"),a("span",{staticClass:"line-number"},[s._v("19")]),a("br"),a("span",{staticClass:"line-number"},[s._v("20")]),a("br"),a("span",{staticClass:"line-number"},[s._v("21")]),a("br"),a("span",{staticClass:"line-number"},[s._v("22")]),a("br"),a("span",{staticClass:"line-number"},[s._v("23")]),a("br"),a("span",{staticClass:"line-number"},[s._v("24")]),a("br"),a("span",{staticClass:"line-number"},[s._v("25")]),a("br"),a("span",{staticClass:"line-number"},[s._v("26")]),a("br"),a("span",{staticClass:"line-number"},[s._v("27")]),a("br"),a("span",{staticClass:"line-number"},[s._v("28")]),a("br"),a("span",{staticClass:"line-number"},[s._v("29")]),a("br"),a("span",{staticClass:"line-number"},[s._v("30")]),a("br"),a("span",{staticClass:"line-number"},[s._v("31")]),a("br"),a("span",{staticClass:"line-number"},[s._v("32")]),a("br"),a("span",{staticClass:"line-number"},[s._v("33")]),a("br"),a("span",{staticClass:"line-number"},[s._v("34")]),a("br"),a("span",{staticClass:"line-number"},[s._v("35")]),a("br"),a("span",{staticClass:"line-number"},[s._v("36")]),a("br"),a("span",{staticClass:"line-number"},[s._v("37")]),a("br"),a("span",{staticClass:"line-number"},[s._v("38")]),a("br"),a("span",{staticClass:"line-number"},[s._v("39")]),a("br"),a("span",{staticClass:"line-number"},[s._v("40")]),a("br"),a("span",{staticClass:"line-number"},[s._v("41")]),a("br"),a("span",{staticClass:"line-number"},[s._v("42")]),a("br"),a("span",{staticClass:"line-number"},[s._v("43")]),a("br"),a("span",{staticClass:"line-number"},[s._v("44")]),a("br"),a("span",{staticClass:"line-number"},[s._v("45")]),a("br"),a("span",{staticClass:"line-number"},[s._v("46")]),a("br"),a("span",{staticClass:"line-number"},[s._v("47")]),a("br"),a("span",{staticClass:"line-number"},[s._v("48")]),a("br"),a("span",{staticClass:"line-number"},[s._v("49")]),a("br"),a("span",{staticClass:"line-number"},[s._v("50")]),a("br"),a("span",{staticClass:"line-number"},[s._v("51")]),a("br"),a("span",{staticClass:"line-number"},[s._v("52")]),a("br"),a("span",{staticClass:"line-number"},[s._v("53")]),a("br"),a("span",{staticClass:"line-number"},[s._v("54")]),a("br")])]),a("h3",{attrs:{id:"_11-3-api-实现二进制信号量"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_11-3-api-实现二进制信号量"}},[s._v("#")]),s._v(" 11.3 API 实现二进制信号量")]),s._v(" "),a("p",[a("code",[s._v("xTaskNotifyGive")]),s._v(" 相当于精简化的 xTaskNotify() + eIncrement")]),s._v(" "),a("p",[a("code",[s._v("ulTaskNotifyTake")]),s._v(" waitting for notification, then reset to 0")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v('TaskHandle_t xflashLED = NULL;\n\nvoid flashLED(void *pvParam) {\n  uint32_t ulNotificationValue;\n  pinMode(23, OUTPUT);\n  while (1) {\n    //返回运行此命令之前的Notification Value\n    //命令含义: waitting for notification, then reset\n    ulNotificationValue = ulTaskNotifyTake(pdTRUE, //pdTRUE 运行完后，清零\n                                           portMAX_DELAY);\n\n    if ( ulNotificationValue > 0 )\n    {\n      digitalWrite(23, !digitalRead(23));\n      vTaskDelay(1000);\n    }\n  }\n}\n\nvoid readBtn(void *pvParam) {\n\n  pinMode(22, INPUT_PULLUP);\n\n  while (1) {\n    if (digitalRead(22) == LOW) {\n      //命令含义，相当于精简化的 xTaskNotify() + eIncrement\n      xTaskNotifyGive(xflashLED);\n      vTaskDelay(120); //button debounce\n    }\n  }\n}\n\n\nvoid setup() {\n  // put your setup code here, to run once:\n  Serial.begin(115200);\n\n  xTaskCreate(flashLED, "Flash LED", 1024 * 4, NULL, 1, &xflashLED);\n  xTaskCreate(readBtn, "Read Button", 1024 * 4, NULL, 1, NULL);\n\n}\n\nvoid loop() {\n}\n\n')])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br"),a("span",{staticClass:"line-number"},[s._v("19")]),a("br"),a("span",{staticClass:"line-number"},[s._v("20")]),a("br"),a("span",{staticClass:"line-number"},[s._v("21")]),a("br"),a("span",{staticClass:"line-number"},[s._v("22")]),a("br"),a("span",{staticClass:"line-number"},[s._v("23")]),a("br"),a("span",{staticClass:"line-number"},[s._v("24")]),a("br"),a("span",{staticClass:"line-number"},[s._v("25")]),a("br"),a("span",{staticClass:"line-number"},[s._v("26")]),a("br"),a("span",{staticClass:"line-number"},[s._v("27")]),a("br"),a("span",{staticClass:"line-number"},[s._v("28")]),a("br"),a("span",{staticClass:"line-number"},[s._v("29")]),a("br"),a("span",{staticClass:"line-number"},[s._v("30")]),a("br"),a("span",{staticClass:"line-number"},[s._v("31")]),a("br"),a("span",{staticClass:"line-number"},[s._v("32")]),a("br"),a("span",{staticClass:"line-number"},[s._v("33")]),a("br"),a("span",{staticClass:"line-number"},[s._v("34")]),a("br"),a("span",{staticClass:"line-number"},[s._v("35")]),a("br"),a("span",{staticClass:"line-number"},[s._v("36")]),a("br"),a("span",{staticClass:"line-number"},[s._v("37")]),a("br"),a("span",{staticClass:"line-number"},[s._v("38")]),a("br"),a("span",{staticClass:"line-number"},[s._v("39")]),a("br"),a("span",{staticClass:"line-number"},[s._v("40")]),a("br"),a("span",{staticClass:"line-number"},[s._v("41")]),a("br"),a("span",{staticClass:"line-number"},[s._v("42")]),a("br"),a("span",{staticClass:"line-number"},[s._v("43")]),a("br"),a("span",{staticClass:"line-number"},[s._v("44")]),a("br"),a("span",{staticClass:"line-number"},[s._v("45")]),a("br")])]),a("h2",{attrs:{id:"_11-xxx"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_11-xxx"}},[s._v("#")]),s._v(" 11. xxx")]),s._v(" "),a("h3",{attrs:{id:"_11-1-说明-2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_11-1-说明-2"}},[s._v("#")]),s._v(" 11.1  说明")]),s._v(" "),a("h3",{attrs:{id:"_11-2-api-2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_11-2-api-2"}},[s._v("#")]),s._v(" 11.2 API")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("h2",{attrs:{id:"_11-xxx-2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_11-xxx-2"}},[s._v("#")]),s._v(" 11. xxx")]),s._v(" "),a("h3",{attrs:{id:"_11-1-说明-3"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_11-1-说明-3"}},[s._v("#")]),s._v(" 11.1  说明")]),s._v(" "),a("h3",{attrs:{id:"_11-2-api-3"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_11-2-api-3"}},[s._v("#")]),s._v(" 11.2 API")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("h2",{attrs:{id:"_11-xxx-3"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_11-xxx-3"}},[s._v("#")]),s._v(" 11. xxx")]),s._v(" "),a("h3",{attrs:{id:"_11-1-说明-4"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_11-1-说明-4"}},[s._v("#")]),s._v(" 11.1  说明")]),s._v(" "),a("h3",{attrs:{id:"_11-2-api-4"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_11-2-api-4"}},[s._v("#")]),s._v(" 11.2 API")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])])])}),[],!1,null,null,null);a.default=t.exports}}]);